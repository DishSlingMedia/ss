syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

package sandstormpb;
option go_package="sandstormpb";

message SandstormEvent {
    string product	= 1;
    string platform = 2;
    string app_version	= 3;
    string build_info = 4;
    string url	= 5;
    string test_framework = 6;
    int32 device_count = 7;
    string location = 8;
    string triggered_by = 9;
    string run_type = 10;
    string environment = 11;
    string suites = 12;
    google.protobuf.Timestamp local_time = 13;
    string automation_repo_version	= 14;
    int32 test_cases_in_input = 15;
    int32 test_cases_not_executed = 16;
    int32 test_cases_executed = 17;
    int32 total_test_case_skipped = 18;
    int32 test_case_passed = 19;
    int32 test_passed_in_retry = 20;
    int32 test_case_failed = 21;
    int32 test_case_failed_due_product_bugs = 22;
    int32 test_case_failures_yet_classified = 23;
    int32 total_time_taken_for_run_in_secs	= 24;
    google.protobuf.Timestamp server_timestamp = 25; // DO NOT SEND THIS VALUE
    int32 total_test_case_in_zephyr = 26;
    string job_type = 27;
}

message SandstormEventResponse {
    string result = 1;
}

service DataPostService{
    rpc ReceiveData(SandstormEvent) returns (SandstormEventResponse) {
        option (google.api.http) = {
        post: "/v1-alpha/sandstorm"
        body: "*"
    	};
    }
}
